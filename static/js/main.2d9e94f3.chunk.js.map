{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["heartClassNameIcon","heartColor","App","useState","showGift","setShowGift","className","join","icon","faHeart","color","size","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAKMA,G,MAAqB,cACrBC,EAAa,UA6CJC,MA3Cf,WAAgB,IAAD,EACmBC,oBAAS,GAD5B,mBACNC,EADM,KACIC,EADJ,KAOb,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,cAAC,IAAD,CACEA,UAAW,CACTN,EACAI,EAAW,eAAiB,iBAC5BG,KAAK,KACPC,KAAMC,IACNC,MAAOT,EACPU,KAAK,OAEP,cAAC,IAAD,CACEL,UAAW,CACTN,EACAI,EAAW,eAAiB,uBAC5BG,KAAK,KACPC,KAAMC,IACNC,MAAOT,EACPU,KAAK,OAEP,cAAC,IAAD,CACEL,UAAW,CAACN,EAAoBI,EAAW,YAAc,IAAIG,KAC3D,KAEFC,KAAMC,IACNC,MAAOT,EACPU,KAAK,KACLC,QAhCa,WACnBP,GAAaD,MAiCT,mBAAGE,UAAU,cAAb,SAA4BF,EAAW,OAAS,qBCjCzCS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2d9e94f3.chunk.js","sourcesContent":["import { faHeart } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useState } from \"react\";\nimport \"./App.css\";\n\nconst heartClassNameIcon = \"heart-icon\";\nconst heartColor = \"#ff4081\";\n\nfunction App() {\n  const [showGift, setShowGift] = useState(false);\n\n  const onHeartClick = () => {\n    setShowGift(!showGift);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <FontAwesomeIcon\n          className={[\n            heartClassNameIcon,\n            showGift ? \"heart-hidden\" : \"heart-explode\",\n          ].join(\" \")}\n          icon={faHeart}\n          color={heartColor}\n          size=\"8x\"\n        />\n        <FontAwesomeIcon\n          className={[\n            heartClassNameIcon,\n            showGift ? \"heart-hidden\" : \"heart-explode-small\",\n          ].join(\" \")}\n          icon={faHeart}\n          color={heartColor}\n          size=\"8x\"\n        />\n        <FontAwesomeIcon\n          className={[heartClassNameIcon, showGift ? \"open-gift\" : \"\"].join(\n            \" \"\n          )}\n          icon={faHeart}\n          color={heartColor}\n          size=\"8x\"\n          onClick={onHeartClick}\n        />\n        <p className=\"heart-title\">{showGift ? \"Gift\" : \"My Darling\"}</p>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}